/*
 Copyright (c) 2017, Atilze Digital Sdn. Bhd.

 cellular_3g.c
 This is the library file for cellular 3G.

 Version   : 1.00
 Author    : Khoo Boon Kien / Tan Han Wei
 File Name : cellular_3g.c

 History:
   1.00 BK 27-Nov-17 Initial
 */

#include "qm_common.h"
#include "system/utilities.h"
#include "qm_uart.h"
#include "../main.h"
#include "qm_common.h"
#include "qm_pinmux.h"
#include "clk.h"
#include "qm_gpio.h"
#include "string.h"
#include "stdlib.h"
#include "system/gpio.h"
#include "qm_pin_functions.h"
#include "qm_gpio.h"

// Initialise the XBee 3G module
void uart0_init(qm_uart_config_t *cfg)
{
    // Enable XBee Vcc
	qm_gpio_set_pin(QM_GPIO_0, 20);

	qm_pmux_select(QM_PIN_ID_19, QM_PMUX_FN_0);  // UART0 TXD
	qm_pmux_select(QM_PIN_ID_18, QM_PMUX_FN_0);  // UART0 RXD
	qm_pmux_select(QM_PIN_ID_41, QM_PMUX_FN_1);  // UART0 RTS
	qm_pmux_select(QM_PIN_ID_40, QM_PMUX_FN_1);  // UART0 CTS
	qm_pmux_input_en(QM_PIN_ID_18, true);
	qm_pmux_input_en(QM_PIN_ID_41, true);

    // Configures UART_0 for 9600 bps
    //cfg->baud_divisor = QM_UART_CFG_BAUD_DL_PACK(0, 208, 5);
	cfg->baud_divisor = QM_UART_CFG_BAUD_DL_PACK(0, 17, 6); //configure baud 115200 bps
	cfg->line_control = QM_UART_LC_8N1;
    cfg->hw_fc = false;

    qm_uart_set_config(QM_UART_0, cfg);

    // enable clock for UART_0
    clk_periph_enable(CLK_PERIPH_CLK | CLK_PERIPH_UARTA_REGISTER);

    clk_sys_udelay(5000000);    // Create 5 sec delay

    // Send +++ (Enter AT command mode)
    uint8_t at0[] = "AT\r\n";
    qm_uart_write_buffer(QM_UART_0, at0, (sizeof(at0) - 1));
    clk_sys_udelay(10000000);    // Create 5 sec delay

    //added starts
	uint8_t uart_rx[16];
	memset(uart_rx,0,sizeof(uart_rx));

	static qm_uart_status_t uart0_status __attribute__((unused)) = 0;

	uint8_t uart_buffer=0;
	qm_uart_get_status(QM_UART_0, &uart0_status);
	if (uart0_status != QM_UART_IDLE)
	{
		for(int jj=0; jj<16; jj++)
		{
			qm_uart_read(QM_UART_0, &uart_buffer, &uart0_status);
			uart_rx[jj] = uart_buffer;
			QM_PRINTF("UART0_Data: %d\n", uart_buffer);
		}
	}

	else
		QM_PUTS("UART0 IDLE");

    //ends
}

void uart1_init(qm_uart_config_t *cfg)
{
	//qm_pmux_select(QM_PIN_ID_33, QM_PIN_33_FN_GPIO_29);  // uart1 control


	// Enable XBee Vcc
	qm_gpio_set_pin(QM_GPIO_0, 20);

	qm_pmux_select(QM_PIN_ID_16, QM_PIN_16_FN_UART1_TXD);  // UART1 TXD
	qm_pmux_select(QM_PIN_ID_17, QM_PIN_17_FN_UART1_RXD);  // UART1 RXD
	qm_pmux_select(QM_PIN_ID_9, QM_PIN_9_FN_UART1_RTS);  // UART1 RTS
	qm_pmux_select(QM_PIN_ID_8, QM_PIN_8_FN_UART1_CTS);  // UART1 CTS
	qm_pmux_input_en(QM_PIN_ID_16, true);
	qm_pmux_input_en(QM_PIN_ID_9, true);

	// Configures UART_0 for 9600 bps
    cfg->baud_divisor = QM_UART_CFG_BAUD_DL_PACK(0, 208, 5);
    cfg->line_control = QM_UART_LC_8N1;
    cfg->hw_fc = false;

    qm_uart_set_config(QM_UART_1, cfg);

    // enable clock for UART_0
    clk_periph_enable(CLK_PERIPH_CLK | CLK_PERIPH_UARTA_REGISTER);

    clk_sys_udelay(5000000);    // Create 5 sec delay


    // Send +++ (Enter AT command mode)
    uint8_t at0[] = "AT\r\n";
    qm_uart_write_buffer(QM_UART_1, at0, (sizeof(at0) - 1));
    clk_sys_udelay(10000000);    // Create 5 sec delay

    //added starts
	uint8_t uart_rx[16];
	memset(uart_rx,0,sizeof(uart_rx));

	static qm_uart_status_t uart1_status __attribute__((unused)) = 0;

	uint8_t uart_buffer=0;
	qm_uart_get_status(QM_UART_1, &uart1_status);
	if (uart1_status != QM_UART_IDLE)
	{
		for(int jj=0; jj<100; jj++)
		{
			qm_uart_read(QM_UART_1, &uart_buffer, &uart1_status);
			uart_rx[jj] = uart_buffer;
			if (uart_rx[jj] == 0)// Check for '0'
			{
				led_b_on();
			}

			else
			{
				led_b_on();
				led_r_on();
			}

			QM_PRINTF("UART1_Data: %d\n", uart_buffer);
		}

	}

	else
		QM_PUTS("UART1 IDLE");


    //ends
}


